/*
* generated by Xtext
*/
grammar InternalTemplateLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.passi.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.passi.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.passi.services.TemplateLanguageGrammarAccess;

}

@parser::members {

 	private TemplateLanguageGrammarAccess grammarAccess;
 	
    public InternalTemplateLanguageParser(TokenStream input, TemplateLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Template";	
   	}
   	
   	@Override
   	protected TemplateLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTemplate
entryRuleTemplate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateRule()); }
	 iv_ruleTemplate=ruleTemplate 
	 { $current=$iv_ruleTemplate.current; } 
	 EOF 
;

// Rule Template
ruleTemplate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='template' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateAccess().getTemplateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getFeaturesFeatureParserRuleCall_3_0()); 
	    }
		lv_Features_3_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		add(
       			$current, 
       			"Features",
        		lv_Features_3_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	 iv_ruleFeature=ruleFeature 
	 { $current=$iv_ruleFeature.current; } 
	 EOF 
;

// Rule Feature
ruleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeatureAccess().getColonKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getValueAttributeValueParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=ruleAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"AttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFeatureAccess().getSemicolonKeyword_0_3());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getTableDataParserRuleCall_1()); 
    }
    this_TableData_4=ruleTableData
    { 
        $current = $this_TableData_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTableData
entryRuleTableData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableDataRule()); }
	 iv_ruleTableData=ruleTableData 
	 { $current=$iv_ruleTableData.current; } 
	 EOF 
;

// Rule TableData
ruleTableData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTableDataAccess().getTableDataAction_0(),
            $current);
    }
)	otherlv_1='tableData' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableDataAccess().getTableDataKeyword_1());
    }
	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTableDataAccess().getForKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getTableDataAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableDataAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTableDataAccess().getTableDataAttributesTableDataAttributeParserRuleCall_5_0_0()); 
	    }
		lv_tableDataAttributes_5_0=ruleTableDataAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableDataRule());
	        }
       		add(
       			$current, 
       			"tableDataAttributes",
        		lv_tableDataAttributes_5_0, 
        		"TableDataAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTableDataAccess().getSectionsTableSectionParserRuleCall_5_1_0()); 
	    }
		lv_sections_6_0=ruleTableSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableDataRule());
	        }
       		add(
       			$current, 
       			"sections",
        		lv_sections_6_0, 
        		"TableSection");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTableDataAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleTableSection
entryRuleTableSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableSectionRule()); }
	 iv_ruleTableSection=ruleTableSection 
	 { $current=$iv_ruleTableSection.current; } 
	 EOF 
;

// Rule TableSection
ruleTableSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='section' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableSectionAccess().getSectionKeyword_0());
    }
(
(
(
		lv_name_1_1=RULE_SECTION_HEADER
		{
			newLeafNode(lv_name_1_1, grammarAccess.getTableSectionAccess().getNameSECTION_HEADERTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"SECTION_HEADER");
	    }

    |		lv_name_1_2=RULE_SECTION_VALUES
		{
			newLeafNode(lv_name_1_2, grammarAccess.getTableSectionAccess().getNameSECTION_VALUESTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"SECTION_VALUES");
	    }

)

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTableSectionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableSectionAccess().getAttributesTableDataAttributeParserRuleCall_3_0()); 
	    }
		lv_attributes_3_0=ruleTableDataAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableSectionRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"TableDataAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableSectionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTableDataAttribute
entryRuleTableDataAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableDataAttributeRule()); }
	 iv_ruleTableDataAttribute=ruleTableDataAttribute 
	 { $current=$iv_ruleTableDataAttribute.current; } 
	 EOF 
;

// Rule TableDataAttribute
ruleTableDataAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getTableDataAttributeAccess().getNameQualifiedNameParserRuleCall_0_0_0()); 
	    }
		lv_name_0_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableDataAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableDataAttributeAccess().getColonKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableDataAttributeAccess().getValueAttributeValueParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=ruleAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableDataAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"AttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableDataAttributeAccess().getSemicolonKeyword_0_3());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getTableDataAttributeAccess().getListAttributeParserRuleCall_1()); 
    }
    this_ListAttribute_4=ruleListAttribute
    { 
        $current = $this_ListAttribute_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleListAttribute
entryRuleListAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListAttributeRule()); }
	 iv_ruleListAttribute=ruleListAttribute 
	 { $current=$iv_ruleListAttribute.current; } 
	 EOF 
;

// Rule ListAttribute
ruleListAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getListAttributeAccess().getNameQualifiedNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListAttributeAccess().getColonKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListAttributeAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		lv_values_3_0=RULE_STRING
		{
			newLeafNode(lv_values_3_0, grammarAccess.getListAttributeAccess().getValuesSTRINGTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListAttributeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListAttributeAccess().getCommaKeyword_3_1_0());
    }
(
(
		lv_values_5_0=RULE_STRING
		{
			newLeafNode(lv_values_5_0, grammarAccess.getListAttributeAccess().getValuesSTRINGTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListAttributeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_5_0, 
        		"STRING");
	    }

)
))*)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getListAttributeAccess().getRightCurlyBracketKeyword_4());
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getListAttributeAccess().getSemicolonKeyword_5());
    }
)
;







// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleAttributeValue
entryRuleAttributeValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeValueRule()); } 
	 iv_ruleAttributeValue=ruleAttributeValue 
	 { $current=$iv_ruleAttributeValue.current.getText(); }  
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getAttributeValueAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getAttributeValueAccess().getINTTerminalRuleCall_1()); 
    }

    |
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeValueAccess().getTrueKeyword_2()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeValueAccess().getFalseKeyword_3()); 
    }
)
    ;





RULE_SECTION_HEADER : 'header';

RULE_SECTION_VALUES : 'values';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


